{"mappings":"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","sources":["<anon>","src/globals.js","src/modules/setLoadingStates.js","src/modules/buttons.js","src/modules/menu.js","src/modules/staggerText.js","src/modules/staggerElements.js","src/modules/SVGPathAnimation.js","src/modules/checkNavTheme.js"],"sourcesContent":["(() => {\nfunction $ce6a18b12420bce7$export$7fd17f34fe72f4b0() {\n    const loading = document.querySelector(\".loading\");\n    if (!loading) return;\n    const logo = loading.querySelector(\".loading_logo\");\n    const logoPath = loading.querySelector(\".loading_bg-svg path\");\n    gsap.set(logoPath, {\n        drawSVG: \"100% live\"\n    });\n    gsap.set(logo, {\n        opacity: 1,\n        y: \"0%\"\n    });\n    gsap.set(loading, {\n        clipPath: \"inset(0% 0% 0% 0%)\"\n    });\n    gsap.to(logoPath, {\n        drawSVG: \"0% live\",\n        duration: 2,\n        delay: 0.5\n    });\n    gsap.to(logo, {\n        opacity: 0,\n        y: \"-50%\",\n        delay: 0.5,\n        duration: 1,\n        ease: \"expo.out\"\n    });\n    gsap.to(loading, {\n        clipPath: \"inset(0% 0% 100% 0%)\",\n        duration: 1,\n        delay: 1,\n        ease: \"expo.out\",\n        onComplete: ()=>{\n            loading.style.display = \"none\";\n            gsap.set(logo, {\n                opacity: 0,\n                y: \"50%\"\n            });\n            gsap.set(loading, {\n                clipPath: \"inset(100% 0% 0% 0%)\"\n            });\n        }\n    });\n    // Loading animation\n    const links = document.querySelectorAll(\"a\");\n    links.forEach((l)=>{\n        l.addEventListener(\"click\", (e)=>{\n            // e.preventDefault();\n            const href = l.href;\n            const url = new URL(href);\n            if (window.location.origin === url.origin && window.location.pathname !== url.pathname && l.target !== \"_blank\") {\n                e.preventDefault();\n                loading.style.display = \"flex\";\n                gsap.to(logo, {\n                    opacity: 1,\n                    y: \"0%\",\n                    duration: 1,\n                    delay: 0.5,\n                    ease: \"expo.out\"\n                });\n                gsap.to(logoPath, {\n                    drawSVG: \"100% live\",\n                    duration: 2,\n                    delay: 0.5\n                });\n                gsap.to(loading, {\n                    clipPath: \"inset(0% 0% 0% 0%)\",\n                    duration: 1,\n                    ease: \"expo.out\",\n                    onComplete: ()=>{\n                        window.location.href = href;\n                    }\n                });\n            // setTimeout(() => {\n            //   window.location.href = href;\n            // }, 500);\n            }\n        });\n    });\n}\n\n\nfunction $8dde7174b81b4982$export$1744cb1794fd120a() {\n    const buttons = document.querySelectorAll(\".button\");\n    if (!buttons.length) {\n        console.error(\"No buttons found.\");\n        return;\n    }\n    // Initialize the pixel transition effect for each button.\n    buttons.forEach((button)=>$8dde7174b81b4982$var$setButton(button));\n}\nfunction $8dde7174b81b4982$var$setButton(button) {\n    // split the button text into spans for lines and words using split-type\n    const buttonEls = new SplitType(button.querySelector('.button_label'), {\n        types: \"lines, words\",\n        tagName: \"span\"\n    });\n    // stagger words when mouse hover\n    button.addEventListener(\"mouseenter\", ()=>{\n        gsap.to(buttonEls.words, {\n            yPercent: -100,\n            stagger: 0.01,\n            duration: 0.5,\n            ease: \"expo.out\"\n        });\n    });\n    // stagger words back when mouse leaves\n    button.addEventListener(\"mouseleave\", ()=>{\n        gsap.to(buttonEls.words, {\n            yPercent: 0,\n            stagger: 0.02,\n            duration: 0.5,\n            ease: \"expo.out\"\n        });\n    });\n}\n\n\nfunction $ee20a49b40292314$export$22ea07d0c2ddb570() {\n    const menu = document.querySelector(\".navbar_component\");\n    if (!menu) {\n        console.error(\"No menu found.\");\n        return;\n    }\n    const menuItems = menu.querySelectorAll(\".navbar_link\");\n    menuItems.forEach((item)=>$ee20a49b40292314$var$setMenuItem(item));\n    const dropdowns = menu.querySelectorAll(\".navbar_dropdown-trigger\");\n    if (!dropdowns) {\n        console.error(\"No dropdowns found.\");\n        return;\n    }\n    dropdowns.forEach((dropdown)=>{\n        $ee20a49b40292314$var$setDropdown(dropdown);\n    });\n}\nfunction $ee20a49b40292314$var$setMenuItem(item) {\n    const itemEls = new SplitType(item.querySelector(\".navbar_link-label\"), {\n        types: \"lines, words\",\n        tagName: \"span\"\n    });\n    item.addEventListener(\"mouseenter\", ()=>{\n        gsap.to(itemEls.words, {\n            yPercent: -100,\n            stagger: 0.05,\n            duration: 0.5,\n            ease: \"expo.out\"\n        });\n    });\n    item.addEventListener(\"mouseleave\", ()=>{\n        gsap.to(itemEls.words, {\n            yPercent: 0,\n            stagger: 0.05,\n            duration: 0.5,\n            ease: \"expo.out\"\n        });\n    });\n}\nfunction $ee20a49b40292314$var$setDropdown(dropdown) {\n    // add mouse hover logic to show / hide dropdown based on .navbar_dropdown height\n    const dropdownMenu = dropdown.querySelector(\".navbar_dropdown\");\n    const dropdownLinks = dropdownMenu.querySelectorAll(\".dropdown_item\");\n    gsap.set(dropdownLinks, {\n        yPercent: 50,\n        opacity: 0\n    });\n    const tl = gsap.timeline();\n    const openDropdown = ()=>{\n        tl.clear();\n        tl.set(dropdownMenu, {\n            height: \"0\"\n        });\n        tl.set(dropdownLinks, {\n            yPercent: 50,\n            opacity: 0\n        });\n        tl.to(dropdownMenu, {\n            height: \"auto\",\n            duration: 0.5,\n            ease: \"expo.out\"\n        });\n        tl.to(dropdownLinks, {\n            yPercent: 0,\n            opacity: 1,\n            stagger: 0.01,\n            duration: 0.5,\n            ease: \"expo.out\"\n        }, 0.25);\n    };\n    const closeDropdown = ()=>{\n        tl.clear();\n        tl.to(dropdownMenu, {\n            height: 0,\n            duration: 0.5,\n            ease: \"expo.out\"\n        });\n        tl.to(dropdownLinks, {\n            yPercent: 50,\n            opacity: 0,\n            duration: 0.3,\n            ease: \"expo.out\"\n        }, 0);\n    };\n    dropdown.addEventListener(\"mouseenter\", ()=>{\n        openDropdown();\n    });\n    dropdown.addEventListener(\"mouseleave\", ()=>{\n        closeDropdown();\n    });\n}\n\n\n// Link timelines to scroll position\nfunction $1aa2e0393d0f1beb$var$createScrollTrigger(triggerElement, elements, start, end, stagger, delay, withScroll) {\n    const trigger = {\n        trigger: triggerElement,\n        scrub: true,\n        start: start,\n        fastScrollEnd: 500,\n        preventOverlaps: \"scroll-text\"\n    };\n    if (!withScroll) {\n        trigger.onEnter = ()=>{\n            gsap.to(elements, {\n                yPercent: 0,\n                opacity: 1,\n                stagger: stagger,\n                duration: 1.5,\n                ease: \"power4.out\",\n                delay: Number(delay)\n            });\n        };\n        gsap.timeline({\n            scrollTrigger: trigger\n        });\n    } else {\n        trigger.end = end;\n        gsap.timeline({\n            scrollTrigger: trigger\n        }).to(words, {\n            yPercent: 0,\n            opacity: 1.5,\n            stagger: stagger,\n            duration: 1,\n            ease: \"none\"\n        });\n    }\n}\nfunction $1aa2e0393d0f1beb$export$1601281ad392a6d8() {\n    // Split all words on the brand core section\n    const textEls = document.querySelectorAll('[stagger-text]');\n    textEls.forEach((el)=>{\n        const type = el.getAttribute(\"stagger-text\");\n        let staggerTextEls;\n        if (el.classList.contains('w-richtext')) staggerTextEls = new SplitType(el.querySelectorAll('p, li, h2, h3'), {\n            types: \"words, lines\",\n            tagName: \"span\"\n        });\n        else staggerTextEls = new SplitType(el, {\n            types: type === \"words\" ? \"words\" : \"lines\",\n            tagName: \"span\"\n        });\n        gsap.set(type === \"words\" ? staggerTextEls.words : staggerTextEls.lines, {\n            yPercent: 100,\n            opacity: 0\n        });\n        el.classList.add(\"init\");\n        const words1 = type === \"words\" ? el.querySelectorAll(\".word\") : el.querySelectorAll(\".line\"), startVal = el.dataset.startPos || \"bottom bottom\", endVal = el.dataset.endPos || \"bottom center\", stagger = el.dataset.stagger || 0.05, delay = el.dataset.delay || 0, withScrollTrigger = el.dataset.withScroll || false;\n        $1aa2e0393d0f1beb$var$createScrollTrigger(el, words1, startVal, endVal, stagger, delay, withScrollTrigger);\n    });\n}\n\n\n// Link timelines to scroll position\nfunction $4013e65a83b1b778$var$createScrollList(triggerElement, elements, start, stagger, delay) {\n    gsap.set(elements, {\n        yPercent: 100,\n        opacity: 0\n    });\n    gsap.timeline({\n        scrollTrigger: {\n            trigger: triggerElement,\n            scrub: true,\n            start: start,\n            onEnter: ()=>{\n                gsap.to(elements, {\n                    yPercent: 0,\n                    opacity: 1,\n                    stagger: stagger,\n                    ease: \"power4.out\",\n                    delay: Number(delay)\n                });\n            }\n        }\n    });\n}\nfunction $4013e65a83b1b778$export$9b05384e3b3cbff1() {\n    const list = document.querySelectorAll(\"[stagger-list]\");\n    if (!list) return;\n    list.forEach((el)=>{\n        const elements = el.querySelectorAll(\"[stagger-el]\"), startVal = el.dataset.startPos || \"top bottom\", stagger = el.dataset.stagger || 0.05, delay = el.dataset.delay || 0;\n        if (!elements) return;\n        $4013e65a83b1b778$var$createScrollList(el, elements, startVal, stagger, delay);\n    });\n}\n\n\nfunction $2739916fb78fd945$export$e125e88f659d8ab1() {\n    const paths = document.querySelectorAll(\"[path-reveal]\");\n    if (!paths) {\n        console.error(\"No paths found.\");\n        return;\n    }\n    paths.forEach((path)=>{\n        $2739916fb78fd945$var$setPathAnimation(path);\n    });\n}\nfunction $2739916fb78fd945$var$setPathAnimation(path) {\n    // use GSAP drawSVG plugin to animate path drawing  \n    const pathEls = path.querySelectorAll(\"path\");\n    const duration = path.dataset.duration ? parseFloat(path.dataset.duration) : 3;\n    gsap.set(pathEls, {\n        drawSVG: \"0%\"\n    });\n    // Set ScrollTrigger to trigger animation when path is in view\n    ScrollTrigger.create({\n        trigger: path,\n        start: \"top center\",\n        onEnter: ()=>{\n            gsap.to(pathEls, {\n                drawSVG: \"100%\",\n                duration: duration,\n                ease: \"expo.out\"\n            });\n        }\n    });\n}\n\n\nfunction $0cbe32f8563a9a71$export$3e5ce0c0ac78a8da() {\n    // Get detection offset, in this case the navbar\n    const navBarHeight = document.querySelector(\"[data-nav-bar-height]\");\n    const themeObserverOffset = navBarHeight ? navBarHeight.offsetHeight / 2 : 0;\n    function checkThemeSection() {\n        const themeSections = document.querySelectorAll(\"[data-theme-section]\");\n        themeSections.forEach(function(themeSection) {\n            const rect = themeSection.getBoundingClientRect();\n            const themeSectionTop = rect.top;\n            const themeSectionBottom = rect.bottom;\n            // If the offset is between the top & bottom of the current section\n            if (themeSectionTop <= themeObserverOffset && themeSectionBottom >= themeObserverOffset) {\n                // Check [data-theme-section]\n                const themeSectionActive = themeSection.getAttribute(\"data-theme-section\");\n                document.querySelectorAll(\"[data-theme-nav]\").forEach(function(elem) {\n                    if (elem.getAttribute(\"data-theme-nav\") !== themeSectionActive) elem.setAttribute(\"data-theme-nav\", themeSectionActive);\n                });\n                // Check [data-bg-section]\n                const bgSectionActive = themeSection.getAttribute(\"data-bg-section\");\n                document.querySelectorAll(\"[data-bg-nav]\").forEach(function(elem) {\n                    if (elem.getAttribute(\"data-bg-nav\") !== bgSectionActive) elem.setAttribute(\"data-bg-nav\", bgSectionActive);\n                });\n            }\n        });\n    }\n    function startThemeCheck() {\n        document.addEventListener(\"scroll\", checkThemeSection);\n    }\n    // Initial check and start listening for scroll\n    checkThemeSection();\n    startThemeCheck();\n}\n\n\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    (0, $ce6a18b12420bce7$export$7fd17f34fe72f4b0)();\n    (0, $0cbe32f8563a9a71$export$3e5ce0c0ac78a8da)();\n    (0, $8dde7174b81b4982$export$1744cb1794fd120a)();\n    (0, $ee20a49b40292314$export$22ea07d0c2ddb570)();\n    (0, $1aa2e0393d0f1beb$export$1601281ad392a6d8)();\n    (0, $4013e65a83b1b778$export$9b05384e3b3cbff1)();\n    (0, $2739916fb78fd945$export$e125e88f659d8ab1)();\n});\n\n})();\n//# sourceMappingURL=globals.js.map\n","import { setLoadingStates } from \"./modules/setLoadingStates\";\nimport { initButtons } from \"./modules/buttons\";\nimport { initMenu } from \"./modules/menu\";\nimport { setStaggerText } from \"./modules/staggerText\";\nimport { setStaggerElements } from \"./modules/staggerElements\";\nimport { setPathAnimations } from \"./modules/SVGPathAnimation\";\nimport { initCheckSectionThemeScroll } from \"./modules/checkNavTheme\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  setLoadingStates();\n  initCheckSectionThemeScroll();\n  initButtons();\n  initMenu();\n  setStaggerText();\n  setStaggerElements();\n  setPathAnimations();\n});\n","export function setLoadingStates() {\n  const loading = document.querySelector(\".loading\");\n  if (!loading) {\n    return;\n  }\n\n  const logo = loading.querySelector(\".loading_logo\");\n  const logoPath = loading.querySelector(\".loading_bg-svg path\");\n\n  gsap.set(logoPath, { drawSVG: \"100% live\" });\n  gsap.set(logo, { opacity: 1, y: \"0%\" });\n  gsap.set(loading, { clipPath: \"inset(0% 0% 0% 0%)\" });\n\n  gsap.to(logoPath, {\n    drawSVG: \"0% live\",\n    duration: 2,\n    delay: 0.5,\n    // ease: \"expo.out\",\n  });\n\n  gsap.to(logo, {\n    opacity: 0,\n    y: \"-50%\",\n    delay: 0.5,\n    duration: 1,\n    ease: \"expo.out\"\n  });\n\n  gsap.to(loading, {\n    clipPath: \"inset(0% 0% 100% 0%)\",\n    duration: 1,\n    delay: 1,\n    ease: \"expo.out\",\n    onComplete: () => {\n      loading.style.display = \"none\";\n      gsap.set(logo, { opacity: 0, y: \"50%\" });\n      gsap.set(loading, { clipPath: \"inset(100% 0% 0% 0%)\" });\n    }\n  });\n\n  // Loading animation\n  const links = document.querySelectorAll(\"a\");\n  links.forEach((l) => {\n    l.addEventListener(\"click\", (e) => {\n      // e.preventDefault();\n      const href = l.href;\n      const url = new URL(href);\n\n      if (\n        window.location.origin === url.origin &&\n        window.location.pathname !== url.pathname &&\n        l.target !== \"_blank\"\n      ) {\n        e.preventDefault();\n\n        loading.style.display = \"flex\";\n        gsap.to(logo, {\n          opacity: 1,\n          y: \"0%\",\n          duration: 1,\n          delay: 0.5,\n          ease: \"expo.out\",\n        });\n        gsap.to(logoPath, {\n          drawSVG: \"100% live\",\n          duration: 2,\n          delay: 0.5,\n          // ease: \"expo.out\",\n        });\n        gsap.to(loading, {\n          clipPath: \"inset(0% 0% 0% 0%)\",\n          duration: 1,\n          ease: \"expo.out\",\n          onComplete: () => {\n            window.location.href = href;\n          },\n        });\n\n        // setTimeout(() => {\n        //   window.location.href = href;\n        // }, 500);\n      }\n    });\n  });\n}\n","export function initButtons() {\n  const buttons = document.querySelectorAll(\".button\");\n\n  if (!buttons.length) {\n    console.error(\"No buttons found.\");\n    return;\n  }\n\n  // Initialize the pixel transition effect for each button.\n  buttons.forEach((button) => setButton(button));\n}\n\nfunction setButton(button) {\n// split the button text into spans for lines and words using split-type\n  const buttonEls = new SplitType(button.querySelector('.button_label'), {\n    types: \"lines, words\",\n    tagName: \"span\",\n  });\n\n  // stagger words when mouse hover\n  button.addEventListener(\"mouseenter\", () => {\n    gsap.to(buttonEls.words, {\n      yPercent: -100,\n      stagger: 0.01,\n      duration: 0.5,\n      ease: \"expo.out\",\n    });\n  });\n\n  // stagger words back when mouse leaves\n  button.addEventListener(\"mouseleave\", () => {\n    gsap.to(buttonEls.words, {\n      yPercent: 0,\n      stagger: 0.02,\n      duration: 0.5,\n      ease: \"expo.out\",\n    });\n  });\n}","export function initMenu() {\n  const menu = document.querySelector(\".navbar_component\");\n\n  if (!menu) {\n    console.error(\"No menu found.\");\n    return;\n  }\n\n  const menuItems = menu.querySelectorAll(\".navbar_link\");\n  menuItems.forEach((item) => setMenuItem(item));\n\n  const dropdowns = menu.querySelectorAll(\".navbar_dropdown-trigger\");\n\n  if (!dropdowns) {\n    console.error(\"No dropdowns found.\");\n    return;\n  }\n\n  dropdowns.forEach((dropdown) => {\n    setDropdown(dropdown);\n  });\n}\n\nfunction setMenuItem(item) {\n  const itemEls = new SplitType(item.querySelector(\".navbar_link-label\"), {\n    types: \"lines, words\",\n    tagName: \"span\",\n  });\n\n  item.addEventListener(\"mouseenter\", () => {\n    gsap.to(itemEls.words, {\n      yPercent: -100,\n      stagger: 0.05,\n      duration: 0.5,\n      ease: \"expo.out\",\n    });\n  });\n\n  item.addEventListener(\"mouseleave\", () => {\n    gsap.to(itemEls.words, {\n      yPercent: 0,\n      stagger: 0.05,\n      duration: 0.5,\n      ease: \"expo.out\",\n    });\n  });\n}\n\nfunction setDropdown(dropdown) {\n  // add mouse hover logic to show / hide dropdown based on .navbar_dropdown height\n  const dropdownMenu = dropdown.querySelector(\".navbar_dropdown\");\n  const dropdownLinks = dropdownMenu.querySelectorAll(\".dropdown_item\");\n\n  gsap.set(dropdownLinks, { yPercent: 50, opacity: 0 });\n\n  const tl = gsap.timeline();\n\n  const openDropdown = () => {\n    tl.clear();\n    tl.set(dropdownMenu, { height: \"0\" });\n    tl.set(dropdownLinks, { yPercent: 50, opacity: 0 });\n    tl.to(dropdownMenu, {\n      height: \"auto\",\n      duration: 0.5,\n      ease: \"expo.out\",\n    });\n\n    tl.to(dropdownLinks, {\n      yPercent: 0,\n      opacity: 1,\n      stagger: 0.01,\n      duration: 0.5,\n      ease: \"expo.out\",\n    }, 0.25);\n  };\n\n  const closeDropdown = () => {\n    tl.clear();\n    tl.to(dropdownMenu, {\n      height: 0,\n      duration: 0.5,\n      ease: \"expo.out\",\n    });\n\n    tl.to(dropdownLinks, {\n      yPercent: 50,\n      opacity: 0,\n      duration: 0.3,\n      ease: \"expo.out\",\n    }, 0);\n  }\n\n  dropdown.addEventListener(\"mouseenter\", () => {\n    openDropdown();\n  });\n\n  dropdown.addEventListener(\"mouseleave\", () => {\n    closeDropdown();\n  });\n}","// Link timelines to scroll position\nfunction createScrollTrigger(triggerElement, elements, start, end, stagger, delay, withScroll) {\n  const trigger = {\n    trigger: triggerElement,\n    scrub: true,\n    start,\n    fastScrollEnd: 500,\n    preventOverlaps: \"scroll-text\",\n  };\n\n  if (!withScroll) {\n    trigger.onEnter = () => {\n      gsap.to(elements, {\n        yPercent: 0,\n        opacity: 1,\n        stagger: stagger,\n        duration: 1.5,\n        ease: \"power4.out\",\n        delay: Number(delay),\n      });\n    };\n\n    gsap.timeline({ scrollTrigger: trigger });\n  } else {\n    trigger.end = end;\n    gsap\n      .timeline({\n        scrollTrigger: trigger,\n      })\n      .to(words, {\n        yPercent: 0,\n        opacity: 1.5,\n        stagger: stagger,\n        duration: 1,\n        ease: \"none\",\n      });\n  }\n}\n\nexport function setStaggerText() {\n  // Split all words on the brand core section\n  const textEls = document.querySelectorAll('[stagger-text]');\n\n  textEls.forEach((el) => {\n    const type = el.getAttribute(\"stagger-text\");\n    let staggerTextEls;\n\n    if (el.classList.contains('w-richtext')) {\n      staggerTextEls = new SplitType(el.querySelectorAll('p, li, h2, h3'), {\n        types: \"words, lines\",\n        tagName: \"span\",\n      });\n\n    } else {\n      staggerTextEls = new SplitType(el, {\n        types: type === \"words\" ? \"words\" : \"lines\",\n        tagName: \"span\",\n      });\n    }\n\n    gsap.set(type === \"words\" ? staggerTextEls.words : staggerTextEls.lines,  { yPercent: 100, opacity: 0 });\n\n    el.classList.add(\"init\");\n\n      const words =\n        type === \"words\"\n          ? el.querySelectorAll(\".word\")\n          : el.querySelectorAll(\".line\"),\n      startVal = el.dataset.startPos || \"bottom bottom\",\n      endVal = el.dataset.endPos || \"bottom center\",\n      stagger = el.dataset.stagger || 0.05,\n      delay = el.dataset.delay || 0,\n      withScrollTrigger = el.dataset.withScroll || false;\n\n    createScrollTrigger(\n      el,\n      words,\n      startVal,\n      endVal,\n      stagger,\n      delay,\n      withScrollTrigger\n    );\n\n  });\n}\n","// Link timelines to scroll position\nfunction createScrollList(\n  triggerElement,\n  elements,\n  start,\n  stagger,\n  delay,\n) {\n  gsap.set(elements, {\n    yPercent: 100,\n    opacity: 0,\n  })\n\n  gsap.timeline({\n    scrollTrigger: {\n      trigger: triggerElement,\n      scrub: true,\n      start,\n      onEnter: () => {\n        gsap.to(elements, {\n          yPercent: 0,\n          opacity: 1,\n          stagger,\n          ease: \"power4.out\",\n          delay: Number(delay),\n        });\n      },\n    },\n  });\n}\n\nexport function setStaggerElements() {\n  const list = document.querySelectorAll(\"[stagger-list]\");\n\n  if (!list) {\n    return;\n  }\n\n  list.forEach((el) => {\n    const elements = el.querySelectorAll(\"[stagger-el]\"),\n      startVal = el.dataset.startPos || \"top bottom\",\n      stagger = el.dataset.stagger || 0.05,\n      delay = el.dataset.delay || 0;\n    \n    if (!elements) {\n      return;\n    }\n    \n    createScrollList(el, elements, startVal, stagger, delay);\n  });\n}\n","export function setPathAnimations() {\n  const paths = document.querySelectorAll(\"[path-reveal]\");\n\n  if (!paths) {\n    console.error(\"No paths found.\");\n    return;\n  }\n\n  paths.forEach((path) => {\n    setPathAnimation(path);\n  });\n}\n\nfunction setPathAnimation(path) {\n  // use GSAP drawSVG plugin to animate path drawing  \n  const pathEls = path.querySelectorAll(\"path\");\n  const duration = path.dataset.duration ? parseFloat(path.dataset.duration) : 3;\n\n  gsap.set(pathEls, { drawSVG: \"0%\" });\n\n\n  // Set ScrollTrigger to trigger animation when path is in view\n  ScrollTrigger.create({\n    trigger: path,\n    start: \"top center\",\n    onEnter: () => {\n      gsap.to(pathEls, {\n        drawSVG: \"100%\",\n        duration: duration,\n        ease: \"expo.out\",\n      });\n    },\n  });\n}","export function initCheckSectionThemeScroll() {\n  // Get detection offset, in this case the navbar\n  const navBarHeight = document.querySelector(\"[data-nav-bar-height]\");\n  const themeObserverOffset = navBarHeight ? navBarHeight.offsetHeight / 2 : 0;\n\n  function checkThemeSection() {\n    const themeSections = document.querySelectorAll(\"[data-theme-section]\");\n\n    themeSections.forEach(function (themeSection) {\n      const rect = themeSection.getBoundingClientRect();\n      const themeSectionTop = rect.top;\n      const themeSectionBottom = rect.bottom;\n\n      // If the offset is between the top & bottom of the current section\n      if (\n        themeSectionTop <= themeObserverOffset &&\n        themeSectionBottom >= themeObserverOffset\n      ) {\n        // Check [data-theme-section]\n        const themeSectionActive =\n          themeSection.getAttribute(\"data-theme-section\");\n        document.querySelectorAll(\"[data-theme-nav]\").forEach(function (elem) {\n          if (elem.getAttribute(\"data-theme-nav\") !== themeSectionActive) {\n            elem.setAttribute(\"data-theme-nav\", themeSectionActive);\n          }\n        });\n\n        // Check [data-bg-section]\n        const bgSectionActive = themeSection.getAttribute(\"data-bg-section\");\n        document.querySelectorAll(\"[data-bg-nav]\").forEach(function (elem) {\n          if (elem.getAttribute(\"data-bg-nav\") !== bgSectionActive) {\n            elem.setAttribute(\"data-bg-nav\", bgSectionActive);\n          }\n        });\n      }\n    });\n  }\n\n  function startThemeCheck() {\n    document.addEventListener(\"scroll\", checkThemeSection);\n  }\n\n  // Initial check and start listening for scroll\n  checkThemeSection();\n  startThemeCheck();\n}\n"],"names":["document","addEventListener","loading","querySelector","logo","logoPath","gsap","set","drawSVG","opacity","y","clipPath","to","duration","delay","ease","onComplete","style","display","links","querySelectorAll","forEach","l","e","href","url","URL","window","location","origin","pathname","target","preventDefault","navBarHeight","themeObserverOffset","offsetHeight","checkThemeSection","themeSections","themeSection","rect","getBoundingClientRect","themeSectionTop","top","themeSectionBottom","bottom","themeSectionActive","getAttribute","elem","setAttribute","bgSectionActive","buttons","length","console","error","button","$8dde7174b81b4982$var$setButton","buttonEls","SplitType","types","tagName","words","yPercent","stagger","menu","menuItems","item","$ee20a49b40292314$var$setMenuItem","itemEls","dropdowns","dropdown","$ee20a49b40292314$var$setDropdown","dropdownMenu","dropdownLinks","tl","timeline","openDropdown","clear","height","closeDropdown","textEls","el","staggerTextEls","type","classList","contains","lines","add","words1","startVal","dataset","startPos","endVal","endPos","withScrollTrigger","withScroll","$1aa2e0393d0f1beb$var$createScrollTrigger","triggerElement","elements","start","end","trigger","scrub","fastScrollEnd","preventOverlaps","scrollTrigger","onEnter","Number","list","paths","path","$2739916fb78fd945$var$setPathAnimation","pathEls","parseFloat","ScrollTrigger","create"],"version":3,"file":"globals.js.map"}